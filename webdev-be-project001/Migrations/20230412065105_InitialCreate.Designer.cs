// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webdev_be_project001.Data;

#nullable disable

namespace webdev_be_project001.Migrations
{
    [DbContext(typeof(DataCtx))]
    [Migration("20230412065105_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webdev_be_project001.Models.Category", b =>
                {
                    b.Property<int>("IdColumn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColumn"));

                    b.Property<string>("NameColumn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdColumn");

                    b.ToTable("CategoryTable");
                });

            modelBuilder.Entity("webdev_be_project001.Models.Country", b =>
                {
                    b.Property<int>("IdColumn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColumn"));

                    b.Property<string>("NameColumn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdColumn");

                    b.ToTable("CountryTable");
                });

            modelBuilder.Entity("webdev_be_project001.Models.JoinPokemonCategory", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("PokemonId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("PokemonCategoryTable");
                });

            modelBuilder.Entity("webdev_be_project001.Models.JoinPokemonOwner", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("PokemonId", "OwnerId");

                    b.HasIndex("OwnerId");

                    b.ToTable("PokemonOwnerTable");
                });

            modelBuilder.Entity("webdev_be_project001.Models.Owner", b =>
                {
                    b.Property<int>("IdColumn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColumn"));

                    b.Property<int>("CountryColumnIdColumn")
                        .HasColumnType("int");

                    b.Property<string>("GymColumn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameColumn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdColumn");

                    b.HasIndex("CountryColumnIdColumn");

                    b.ToTable("OwnerTable");
                });

            modelBuilder.Entity("webdev_be_project001.Models.Pokemon", b =>
                {
                    b.Property<int>("IdColumn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColumn"));

                    b.Property<DateTime>("DOBColumn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameColumn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdColumn");

                    b.ToTable("PokemonTable");
                });

            modelBuilder.Entity("webdev_be_project001.Models.Review", b =>
                {
                    b.Property<int>("IdColumn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColumn"));

                    b.Property<int>("PokemonColumnIdColumn")
                        .HasColumnType("int");

                    b.Property<int>("RatingColumn")
                        .HasColumnType("int");

                    b.Property<int>("ReviewerColumnIdColumn")
                        .HasColumnType("int");

                    b.Property<string>("TextColumn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleColumn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdColumn");

                    b.HasIndex("PokemonColumnIdColumn");

                    b.HasIndex("ReviewerColumnIdColumn");

                    b.ToTable("ReviewTable");
                });

            modelBuilder.Entity("webdev_be_project001.Models.Reviewer", b =>
                {
                    b.Property<int>("IdColumn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColumn"));

                    b.Property<string>("FirstNameColumn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastNameColumn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdColumn");

                    b.ToTable("ReviewerTable");
                });

            modelBuilder.Entity("webdev_be_project001.Models.JoinPokemonCategory", b =>
                {
                    b.HasOne("webdev_be_project001.Models.Category", "Category")
                        .WithMany("PokemonCategoryClt")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webdev_be_project001.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonCategoryClt")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("webdev_be_project001.Models.JoinPokemonOwner", b =>
                {
                    b.HasOne("webdev_be_project001.Models.Owner", "Owner")
                        .WithMany("PokemonOwnerClt")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webdev_be_project001.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonOwnerClt")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("webdev_be_project001.Models.Owner", b =>
                {
                    b.HasOne("webdev_be_project001.Models.Country", "CountryColumn")
                        .WithMany("OwnerClt")
                        .HasForeignKey("CountryColumnIdColumn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryColumn");
                });

            modelBuilder.Entity("webdev_be_project001.Models.Review", b =>
                {
                    b.HasOne("webdev_be_project001.Models.Pokemon", "PokemonColumn")
                        .WithMany("ReviewClt")
                        .HasForeignKey("PokemonColumnIdColumn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webdev_be_project001.Models.Reviewer", "ReviewerColumn")
                        .WithMany("ReviewClt")
                        .HasForeignKey("ReviewerColumnIdColumn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PokemonColumn");

                    b.Navigation("ReviewerColumn");
                });

            modelBuilder.Entity("webdev_be_project001.Models.Category", b =>
                {
                    b.Navigation("PokemonCategoryClt");
                });

            modelBuilder.Entity("webdev_be_project001.Models.Country", b =>
                {
                    b.Navigation("OwnerClt");
                });

            modelBuilder.Entity("webdev_be_project001.Models.Owner", b =>
                {
                    b.Navigation("PokemonOwnerClt");
                });

            modelBuilder.Entity("webdev_be_project001.Models.Pokemon", b =>
                {
                    b.Navigation("PokemonCategoryClt");

                    b.Navigation("PokemonOwnerClt");

                    b.Navigation("ReviewClt");
                });

            modelBuilder.Entity("webdev_be_project001.Models.Reviewer", b =>
                {
                    b.Navigation("ReviewClt");
                });
#pragma warning restore 612, 618
        }
    }
}
